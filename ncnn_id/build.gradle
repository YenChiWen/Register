apply plugin: 'com.android.library'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 28
        versionCode 1
        versionName "1.0.1"
        ndk {
            abiFilters "armeabi-v7a" //"arm64-v8a"
        }
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11"
                arguments "-DANDROID_STL=gnustl_static"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path file('src/main/jni/CMakeLists.txt')
        }
    }

    sourceSets {
        main{
            jniLibs.srcDirs = ['src/main/libs']
        }
    }

//    sourceSets.main {
//        jni.srcDirs = ['src/main/jni'] // This prevents the auto generation of Android.mk
//        java {
//            srcDir 'src/main/java'
//        }
//
//        manifest.srcFile 'src/main/AndroidManifest.xml'
//        res.srcDirs = ['src/main/res']
//    }
//
//    externalNativeBuild{
//        ndkBuild{
//            path file('src/main/jni/Android.mk')
//        }
//    }
//
//    task buildNative(type: Exec, description: 'Compile JNI source via NDK') {
//        def ndkDir = android.ndkDirectory
//        if (org.gradle.internal.os.OperatingSystem.current().isLinux()) {
//            ndkDir = "$ndkDir/ndk-build"
//        }
//        if (org.gradle.internal.os.OperatingSystem.current().isMacOsX()) {
//            ndkDir = "$ndkDir/ndk-build"
//        }
//        if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
//            ndkDir = "$ndkDir/ndk-build.cmd"
//        }
//        commandLine ndkDir,
//                '-C', file('src/main/jni').absolutePath, // Change src/main/jni the relative path to your jni source
//                '-j', Runtime.runtime.availableProcessors(),
//                'all'//,
//                //'NDK_DEBUG=1',
//                //'NDK_LOG=1'
//    }
//
//    task cleanNative(type: Exec, description: 'Clean JNI object files') {
//        def ndkDir = android.ndkDirectory
//        if (org.gradle.internal.os.OperatingSystem.current().isLinux()) {
//            ndkDir = "$ndkDir/ndk-build"
//        }
//        if (org.gradle.internal.os.OperatingSystem.current().isMacOsX()) {
//            ndkDir = "$ndkDir/ndk-build"
//        }
//        if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
//            ndkDir = "$ndkDir/ndk-build.cmd"
//        }
//        commandLine ndkDir,
//                '-C', file('src/main/jni').absolutePath, // Change src/main/jni the relative path to your jni source
//                'clean'
//    }
//
//    clean.dependsOn 'cleanNative'
//
//    tasks.withType(JavaCompile) {
//        compileTask -> compileTask.dependsOn buildNative
//    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation (name: 'openCVLibrary310-release', ext: 'aar')
}
